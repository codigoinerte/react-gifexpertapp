{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEM,sBAAMC,SAbS,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOhB,SACA,uBACMO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCpCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAU,WAGNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAOrB,CAACpB,IAGGqB,EDtB0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEyBdgB,EAlCO,WAIlB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,YCtBjC6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.74b00926.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputCHange = (e) => {\r\n        // console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        // console.log('submit echo');\r\n        if(inputValue.trim().length>2)\r\n        {\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n          <form onSubmit={ handleSubmit }>\r\n          <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputCHange }\r\n                 /> \r\n          </form>       \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=nG8ogX2OCv94LXJCisHYmCObkBHeNI2w&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n    }})\r\n\r\n    // console.log(gifs);\r\n    // setimages(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title} />\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'; //, { useState, useEffect } \r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n      \r\n    return (\r\n        <> \r\n          <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>  \r\n          { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n          <div className=\"card-grid\">  \r\n              {\r\n                  images.map( img => (                    \r\n                    <GifGridItem \r\n                    key={img.id}                    \r\n                    {...img}\r\n                     />\r\n                  ))\r\n              }\r\n         \r\n            </div>\r\n         </>   \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:true\r\n    })\r\n   \r\n    useEffect(()=>{\r\n\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n                \r\n            });   \r\n\r\n        \r\n\r\n    }, [category])\r\n\r\n    \r\n    return state; \r\n}","// import React from 'react';\r\n\r\nimport { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp  = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Attack on Titan']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n           \r\n            <ol>\r\n                {                    \r\n                    categories.map( category=>(\r\n                        //    return <li key={ category }> { category } </li>\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                             />\r\n                             \r\n                             ))\r\n                }\r\n            </ol>\r\n            \r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp  from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}